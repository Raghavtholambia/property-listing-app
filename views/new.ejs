<%- include('./components/header.ejs') %>

<form id="uploadForm" action="/listing" method="POST" enctype="multipart/form-data">

  <!-- Category -->
  <div class="mb-3">
    <label for="category" class="form-label">Category</label>
    <select id="category" name="listing[category]" class="form-select" required>
      <option value="">Select Category</option>
      <option value="Accessories">Accessories</option>
      <option value="Electronics">Electronics</option>
      <option value="Home Appliance">Home Appliance</option>
      <option value="Furniture">Furniture</option>
      <option value="Others">Others</option>
    </select>
  </div>

  <!-- Item Name -->
  <div class="mb-3">
    <label for="itemName" class="form-label">Item Name</label>
    <div class="input-group">
      <span class="input-group-text"><i class="bi bi-tv"></i></span>
      <input type="text" id="itemName" name="listing[itemName]" class="form-control" placeholder="e.g. AC, TV, Bed" required>
    </div>
  </div>

  <!-- Description -->
  <div class="mb-3">
    <label for="description" class="form-label">Description</label>
    <textarea id="description" name="listing[description]" class="form-control" rows="3" placeholder="Write about the item" required></textarea>
  </div>

  <!-- Image -->
  <div class="mb-3">
    <label for="image" class="form-label">Image</label>
    <input type="file" id="image" name="listing[image]" class="form-control" accept="image/*">
  </div>

  <!-- Price Per Day -->
  <div class="mb-3">
    <label for="pricePerDay" class="form-label">Price (‚Çπ per day)</label>
    <input type="number" id="pricePerDay" name="listing[pricePerDay]" class="form-control" placeholder="500" min="0" required>
  </div>

  <!-- City -->
  <div class="mb-3">
    <label for="city" class="form-label">City</label>
    <input type="text" id="city" name="listing[city]" class="form-control" placeholder="Delhi" required>
  </div>

  <!-- Country -->
  <div class="mb-3">
    <label for="country" class="form-label">Country</label>
    <input type="text" id="country" name="listing[country]" class="form-control" placeholder="India" required>
  </div>

  
 <!-- Location (Google Map) -->
  <div class="mb-3">
    <label for="map" class="form-label">Shop Location</label>
    <div id="map" style="height: 300px; width: 100%; border-radius: 10px;"></div>
    <small class="text-muted">üìç Move the marker to select your shop location</small>
  </div>

  <!-- hidden inputs -->
  <input type="hidden" id="latitude" name="listing[latitude]">
  <input type="hidden" id="longitude" name="listing[longitude]">
  <input type="hidden" id="address" name="listing[address]">

  <!-- Submit -->
  <div class="d-grid">
    <button type="submit" class="btn btn-primary btn-lg">
      <i class="bi bi-check2-circle me-2"></i>
      Submit Rental Item
    </button>
  </div>
</form>

<!-- Google Maps Script -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBFhRYweQKpfULj3BEm_VD3dmMqA10QirY&libraries=places"></script>
<script>
  function initMap() {
    const defaultLocation = { lat: 28.6139, lng: 77.2090 }; // fallback (Delhi)
    const map = new google.maps.Map(document.getElementById("map"), {
      zoom: 12,
      center: defaultLocation,
    });

    const marker = new google.maps.Marker({
      position: defaultLocation,
      map: map,
      draggable: true,
    });

    const geocoder = new google.maps.Geocoder();

    // function to update hidden inputs
    function updatePosition(lat, lng) {
      document.getElementById("latitude").value = lat;
      document.getElementById("longitude").value = lng;

      // reverse geocode ‚Üí get human readable address
      geocoder.geocode({ location: { lat, lng } }, (results, status) => {
        if (status === "OK" && results[0]) {
          document.getElementById("address").value = results[0].formatted_address;
        }
      });
    }

    // ‚úÖ Use current location if available
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (pos) => {
          const userLocation = {
            lat: pos.coords.latitude,
            lng: pos.coords.longitude,
          };
          map.setCenter(userLocation);
          map.setZoom(15);
          marker.setPosition(userLocation);
          updatePosition(userLocation.lat, userLocation.lng);
        },
        () => {
          console.warn("‚ö†Ô∏è Location permission denied, using default Delhi");
          updatePosition(defaultLocation.lat, defaultLocation.lng);
        }
      );
    } else {
      console.warn("‚ö†Ô∏è Geolocation not supported, using default Delhi");
      updatePosition(defaultLocation.lat, defaultLocation.lng);
    }

    // ‚úÖ Update when marker is dragged
    google.maps.event.addListener(marker, "dragend", () => {
      const pos = marker.getPosition();
      updatePosition(pos.lat(), pos.lng());
    });
  }

  window.onload = initMap;
</script>
